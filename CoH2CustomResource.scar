--[[ Custom resources. Referenced from Janne252 at coh2.org
        - Resource income affect # per minute
        - All resources are set to 1
        - Game hard sets to whatever the selection is by the host
        - Tuning packs WILL override this
        
    Math functions info:
        - MUT_Addition: Add a flat value X to your resource
            - Subtraction: Use MUT_addition to subtract
        - MUT_Multiplication: Multiply by X amount to resource
            - Division: Use use a decimal

    - Majority is a reference to how to set your custom resources, usually tuning packs will override these
    - You can also preset these directly to players if you are making a scenario map. However, you will also
      need to write your own lua. 
]]

function CustomStartingResources_Init()
  --Standard resource preset: DO NOT CHANGE
	local ResourceSets = {
		standard = {
			--german:
			[0] = {
				manpower = 490,
				fuel = 20,
				munition = 0,
				action = 0,
				command = 1,
			},
			--soviet:
			[1] = {
				manpower = 490,
				fuel = 50,
				munition = 0,
				action = 0,
				command = 1,

			},
			--Obercommando west:
			[2] = {
				manpower = 240,
				fuel = 40,
				munition = 0,
				action = 0,
				command = 1,
			},
			--us forces:
			[3] = {
				manpower = 400,
				fuel = 15,
				munition = 0,
				action = 0,
				command = 1,
			},
			--british forces:
			[4] = {
				manpower = 400,
				fuel = 15,
				munition = 0,
				action = 0,
				command = 1,
			},
			income_modifier = {
				{type = RT_Manpower, value = 1, math_type = MUT_Multiplication}, -- manpower. math_type = MUT_Multiplication OR MUT_Addition
				{type = RT_Munition, value = 1, math_type = MUT_Multiplication}, -- munition. math_type = MUT_Multiplication OR MUT_Addition
				{type = RT_Fuel, value = 1, math_type = MUT_Multiplication}, -- fuel. math_type = MUT_Multiplication OR MUT_Addition
				{type = RT_Action, value = 1, math_type = MUT_Multiplication}, -- action/xp. math_type = MUT_Multiplication OR MUT_Addition
			},
		},
    
    --High Resources Preset: DO NOT CHANGE
		highResources = {
			--german:
			[0] = {
				manpower = 1390,
				fuel = 50,
				munition = 50,
				action = 0,
				command = 2,
			},
			--soviet:
			[1] = {
				manpower = 1390,
				fuel = 80,
				munition = 50,
				action = 0,
				command = 2,
			},
			--Obercommando west:
			[2] = {
				manpower = 1140,
				fuel = 70,
				munition = 50,
				action = 0,
				command = 2,
			},
			--us forces:
			[3] = {
				manpower = 1300,
				fuel = 45,
				munition = 50,
				action = 0,
				command = 2,
			},
			--british forces:
			[4] = {
				manpower = 1300,
				fuel = 45,
				munition = 50,
				action = 0,
				command = 2,
			},
			income_modifier = {
				{type = RT_Manpower, value = 1, math_type = MUT_Multiplication}, -- manpower. math_type = MUT_Multiplication OR MUT_Addition
				{type = RT_Munition, value = 1, math_type = MUT_Multiplication}, -- munition. math_type = MUT_Multiplication OR MUT_Addition
				{type = RT_Fuel, value = 1, math_type = MUT_Multiplication}, -- fuel. math_type = MUT_Multiplication OR MUT_Addition
				{type = RT_Action, value = 1, math_type = MUT_Multiplication}, -- action/xp. math_type = MUT_Multiplication OR MUT_Addition
			},
		},
    
    --CUSTOM SET HERE, INSERT YOUR VALUES YOU WANT HERE.
		customSet_01 = {
			--german:
			[0] = {
				manpower = 4000,
				fuel = 300,
				munition = 500,
				action = 0,
				command = 12,
			},
			--soviet:
			[1] = {
				manpower = 4000,
				fuel = 300,
				munition = 500,
				action = 0,
				command = 12,
			},
			--Obercommando west:
			[2] = {
				manpower = 4000,
				fuel = 300,
				munition = 500,
				action = 0,
				command = 12,
			},
			--us forces:
			[3] = {
				manpower = 4000,
				fuel = 300,
				munition = 500,
				action = 0,
				command = 12,
			},
			--british forces:
			[4] = {
				manpower = 4000,
				fuel = 300,
				munition = 500,
				action = 0,
				command = 12,
			},
		income_modifier = {
			{type = RT_Manpower, value = 2, math_type = MUT_Multiplication}, -- manpower. math_type = MUT_Multiplication OR MUT_Addition
			{type = RT_Munition, value = 3, math_type = MUT_Multiplication}, -- munition. math_type = MUT_Multiplication OR MUT_Addition
			{type = RT_Fuel, value = 3, math_type = MUT_Multiplication}, -- fuel. math_type = MUT_Multiplication OR MUT_Addition
			{type = RT_Action, value = 1, math_type = MUT_Multiplication}, -- action/xp. math_type = MUT_Multiplication OR MUT_Addition
		},
	}, 
	}
	--[[ Info:
        Command below will override presets. You can either make it your custom presets or 
        leave it to default 2 presets of standard and high resources. Cannot have both active
        at once. Comment out below if you want default presets only.
          ]] 

  --Take custom input, store as a temp then set preset.
	local g_ResourceSet = ResourceSets.customSet_01
	local Player_ApplyResourceSet = function(player, resourceSet)
		Player_SetResource(player, RT_Manpower, resourceSet.manpower)
		Player_SetResource(player, RT_Fuel, resourceSet.fuel)
		Player_SetResource(player, RT_Munition, resourceSet.munition)
		Player_SetResource(player, RT_Action, resourceSet.action)
		Player_SetResource(player, RT_Command, resourceSet.command)	
	end

    --Population cap override. If you wanna be funny, you can use a random number generator for this
    --May make games more interesting
	g_popCapOverride = 300
	
  --Give all players new preset
	for i = 1, World_GetPlayerCount() do
		local player = World_GetPlayerAt(i)
		local resource_set = g_ResourceSet[Player_GetRaceIndex(player)]
		Player_ApplyResourceSet(player, resource_set)
		Player_SetPopCapOverride(player, g_popCapOverride)
		for key, resource in ipairs(g_ResourceSet.income_modifier) do
			local _value = resource.value
			if resource.math_type == MUT_Addition then
				_value = _value / (60 * 8)
			end
			Modify_PlayerResourceRate(player, resource.type, _value, resource.math_type)
		end
	end
end

--[[ Custom function that converts player faction type to an integer. Directly from Janne252 at coh2.org ]]
function Player_GetRaceIndex(player)
	local racename = Player_GetRaceName(player)
	if racename == "german" then
		return 0
	elseif racename == "soviet" then
		return 1
	elseif racename == "west_german" then
		return 2
	elseif racename == "aef" then
		return 3
	elseif racename == "british" then
		return 4
	else
		return 0
	end
end
--Function Call
Scar_AddInit(CustomStartingResources_Init)
