function OnInitID()

	-- [[ Markers ]]
    -- [[ USE WORLDBUILDER PRESET NAMES.
        Tip:
            - Save everything in a separate file
            - Worldbuilder does not save your SCAR files
            - You must copy paste it over after saving before you build
            - You may need to install CoH2 32 bit World Builder. Check COH2.org for files
              as some files are missing since the 64 bit update 
            - Final note: Markers when placed don't always align to ground so you'll have to make
              sure they are attached to the floor. If you are using them as spawners, make sure you delete them
              using the make dead command as it is very easy to hit the entity limit and bugsplat with mines.
            - There is no cap on markers, there is a cap on entities though. And displacing too much ground in
              the map will sometimes bugsplat the game

    ]]
	mkr_1 = Marker_FromName("mkr_1","Enemy Spawn")
	mkr_2 = Marker_FromName("mkr_2","Enemy Spawn")
    mkr_3 = Marker_FromName("mkr_3","Enemy Spawn")
    mkr_4 = Marker_FromName("mkr_4","Enemy Spawn")

	-- [[ Squad Groups ]]

	-- [[ Entity Groups ]]

end

-- [[ Function main
        - This function is the RNG function for call in abilities/spawners

        - This mod is used for hilarious effect for 
        - Achelos River: Stuka edition. It takes the list of markers
        - and randomly selects a point within the marker to spam
        - Stuka abilities. Possible ability list will be linked below

        - In general, all commander abilities are possible, and avoid using
        - quick interval for long abilities such as Railway artillery as 
        - your game will become a Microsoft powerpoint slideshow within a minute
]]
function OnInit()
	t_players = {}
	--Time in seconds till first strike. In case it gets stuck in circular loop doing nothing, USE interval
    --This preset will start it at 1 minute and send a wave of barrages every 2 or 3 seconds
	g_offmap_interval_first_min = 60
	g_offmap_interval_first_max = 61
	--Time in seconds to each strike after that
	g_offmap_interval_min = 2
	g_offmap_interval_max = 3

	--Give each faction your designated ability that you want spammed
    --Stukas make the whistle sound when they land for maximum fun and rage

	g_aef_ability = ABILITY.GERMAN.STUKA_BOMBING_STRIKE

	g_british_ability = ABILITY.GERMAN.STUKA_BOMBING_STRIKE

	g_west_german_ability = ABILITY.GERMAN.STUKA_BOMBING_STRIKE

	g_german_ability = ABILITY.GERMAN.STUKA_BOMBING_STRIKE

	g_soviet_ability = ABILITY.GERMAN.STUKA_BOMBING_STRIKE

    --Give all players the ability. You can also just pick one guy,
    --but that would mean reduced damage to your teammates, so to be fair everyone gets the ability
	for i=1,World_GetPlayerCount() do	
		local player = World_GetPlayerAt(i)
		table.insert (t_players, player)
		if Player_GetRaceName(player) == "german" then
			Player_AddAbility(t_players[i], g_german_ability)
		elseif Player_GetRaceName(player) == "west_german" then
			Player_AddAbility(t_players[i], g_west_german_ability)
		elseif Player_GetRaceName(player) == "soviet" then
			Player_AddAbility(t_players[i], g_soviet_ability)
		elseif Player_GetRaceName(player) == "aef" then
			Player_AddAbility(t_players[i], g_aef_ability)
		elseif Player_GetRaceName(player) == "british" then
			Player_AddAbility(t_players[i], g_british_ability)
		end
	end

    --Create the time rule and call the cast command to get started!
	Rule_AddInterval(RNG_Cast, World_GetRand(g_offmap_interval_first_min, g_offmap_interval_first_max))

end

--Cast command, this function will update the time interval to infinetely loop til the end of the game
--You may also add a conditional to make it stop such as by point condition, player death, etc

function RNG_Cast ()
	--Marker list
	local markers_Cast =
		{
		mkr_1,
		mkr_2,
        mkr_3,
        mkr_4,
	}

    --Create targets based off the number of barrages per iteration
    --12 barrages every 3 seconds usually covers a 1v1 or 2v2 map
    --Remember: You can set the size of your markers and the locations to hit
    --Achelos river: Stuka Edition uses 47 markers to ensure no barrage ever feels like its hitting
    --the same place. It also avoids hitting dead spots such as rivers/forest

	local target_R = Util_GetRandomPosition(Table_GetRandomItem(markers_Cast))
	local target_R2 = Util_GetRandomPosition(Table_GetRandomItem(markers_Cast))
	local target_R3 = Util_GetRandomPosition(Table_GetRandomItem(markers_Cast))
	local target_R4 = Util_GetRandomPosition(Table_GetRandomItem(markers_Cast))
	local target_R5 = Util_GetRandomPosition(Table_GetRandomItem(markers_Cast))
	local target_R6 = Util_GetRandomPosition(Table_GetRandomItem(markers_Cast))

    --Pick a random player and use the special ability on your randomly selected marker
	local target_Player = t_players[World_GetRand(1, World_GetPlayerCount())]
	if Player_GetRaceName(target_Player) == "german" then
		Cmd_Ability(target_Player, g_german_ability,target_R, nil, true)
		Cmd_Ability(target_Player, g_german_ability,target_R2, nil, true)
		Cmd_Ability(target_Player, g_german_ability,target_R3, nil, true)
		Cmd_Ability(target_Player, g_german_ability,target_R4, nil, true)
		Cmd_Ability(target_Player, g_german_ability,target_R5, nil, true)
		Cmd_Ability(target_Player, g_german_ability,target_R6, nil, true)
	elseif Player_GetRaceName(target_Player) == "west_german" then
		Cmd_Ability(target_Player, g_west_german_ability,target_R, nil, true)
		Cmd_Ability(target_Player, g_west_german_ability,target_R2, nil, true)
		Cmd_Ability(target_Player, g_west_german_ability,target_R3, nil, true)
		Cmd_Ability(target_Player, g_west_german_ability,target_R4, nil, true)
		Cmd_Ability(target_Player, g_west_german_ability,target_R5, nil, true)
		Cmd_Ability(target_Player, g_west_german_ability,target_R6, nil, true)
	elseif Player_GetRaceName(target_Player) == "soviet" then
		Cmd_Ability(target_Player, g_soviet_ability,target_R, nil, true)
		Cmd_Ability(target_Player, g_soviet_ability,target_R2, nil, true)
		Cmd_Ability(target_Player, g_soviet_ability,target_R3, nil, true)
		Cmd_Ability(target_Player, g_soviet_ability,target_R4, nil, true)
		Cmd_Ability(target_Player, g_soviet_ability,target_R5, nil, true)
		Cmd_Ability(target_Player, g_soviet_ability,target_R6, nil, true)
	elseif Player_GetRaceName(target_Player) == "aef" then
		Cmd_Ability(target_Player, g_aef_ability,target_R, nil, true)
		Cmd_Ability(target_Player, g_aef_ability,target_R2, nil, true)
		Cmd_Ability(target_Player, g_aef_ability,target_R3, nil, true)
		Cmd_Ability(target_Player, g_aef_ability,target_R4, nil, true)
		Cmd_Ability(target_Player, g_aef_ability,target_R5, nil, true)
		Cmd_Ability(target_Player, g_aef_ability,target_R6, nil, true)
	elseif Player_GetRaceName(target_Player) == "british" then
		Cmd_Ability(target_Player, g_british_ability,target_R, nil, true)
		Cmd_Ability(target_Player, g_british_ability,target_R2, nil, true)
		Cmd_Ability(target_Player, g_british_ability,target_R3, nil, true)
		Cmd_Ability(target_Player, g_british_ability,target_R4, nil, true)
		Cmd_Ability(target_Player, g_british_ability,target_R5, nil, true)
		Cmd_Ability(target_Player, g_british_ability,target_R6, nil, true)
	end

    --Set your rule to use new fire time
	Rule_ChangeInterval(RNG_Cast, World_GetRand(g_offmap_interval_min, g_offmap_interval_max))

end


--[[ Custom resources. Referenced from Janne252 at COH2.ORG
        - Resource income affect # per minute
        - All resources are set to 1
        - Game hard sets to whatever the selection is by the host
        - Tuning packs WILL override this
        
    Math functions info:
        - MUT_Addition: Add a flat value X to your resource
            - Subtraction: Use MUT_addition to subtract
        - MUT_Multiplication: Multiply by X amount to resource
            - Division: Use use a decimal

    Feel free to remove this if you don't care about custom resources, I just feel like 
    custom resources would be more useful in this kind of map 
]]

function CustomStartingResources_Init()
    --Standard resource preset: DO NOT CHANGE
	local ResourceSets = {
		standard = {
			--german:
			[0] = {
				manpower = 490,
				fuel = 20,
				munition = 0,
				action = 0,
				command = 1,
			},
			--soviet:
			[1] = {
				manpower = 490,
				fuel = 50,
				munition = 0,
				action = 0,
				command = 1,

			},
			--Obercommando west:
			[2] = {
				manpower = 240,
				fuel = 40,
				munition = 0,
				action = 0,
				command = 1,
			},
			--us forces:
			[3] = {
				manpower = 400,
				fuel = 15,
				munition = 0,
				action = 0,
				command = 1,
			},
			--british forces:
			[4] = {
				manpower = 400,
				fuel = 15,
				munition = 0,
				action = 0,
				command = 1,
			},
			income_modifier = {
				{type = RT_Manpower, value = 1, math_type = MUT_Multiplication}, -- manpower. math_type = MUT_Multiplication OR MUT_Addition
				{type = RT_Munition, value = 1, math_type = MUT_Multiplication}, -- munition. math_type = MUT_Multiplication OR MUT_Addition
				{type = RT_Fuel, value = 1, math_type = MUT_Multiplication}, -- fuel. math_type = MUT_Multiplication OR MUT_Addition
				{type = RT_Action, value = 1, math_type = MUT_Multiplication}, -- action/xp. math_type = MUT_Multiplication OR MUT_Addition
			},
		},
        --High Resources Preset: DO NOT CHANGE
		highResources = {
			--german:
			[0] = {
				manpower = 1390,
				fuel = 50,
				munition = 50,
				action = 0,
				command = 2,
			},
			--soviet:
			[1] = {
				manpower = 1390,
				fuel = 80,
				munition = 50,
				action = 0,
				command = 2,
			},
			--Obercommando west:
			[2] = {
				manpower = 1140,
				fuel = 70,
				munition = 50,
				action = 0,
				command = 2,
			},
			--us forces:
			[3] = {
				manpower = 1300,
				fuel = 45,
				munition = 50,
				action = 0,
				command = 2,
			},
			--british forces:
			[4] = {
				manpower = 1300,
				fuel = 45,
				munition = 50,
				action = 0,
				command = 2,
			},
			income_modifier = {
				{type = RT_Manpower, value = 1, math_type = MUT_Multiplication}, -- manpower. math_type = MUT_Multiplication OR MUT_Addition
				{type = RT_Munition, value = 1, math_type = MUT_Multiplication}, -- munition. math_type = MUT_Multiplication OR MUT_Addition
				{type = RT_Fuel, value = 1, math_type = MUT_Multiplication}, -- fuel. math_type = MUT_Multiplication OR MUT_Addition
				{type = RT_Action, value = 1, math_type = MUT_Multiplication}, -- action/xp. math_type = MUT_Multiplication OR MUT_Addition
			},
		},
        --CUSTOM SET HERE, INSERT YOUR VALUES YOU WANT HERE.
		customSet_01 = {
			--german:
			[0] = {
				manpower = 4000,
				fuel = 300,
				munition = 500,
				action = 0,
				command = 12,
			},
			--soviet:
			[1] = {
				manpower = 4000,
				fuel = 300,
				munition = 500,
				action = 0,
				command = 12,
			},
			--Obercommando west:
			[2] = {
				manpower = 4000,
				fuel = 300,
				munition = 500,
				action = 0,
				command = 12,
			},
			--us forces:
			[3] = {
				manpower = 4000,
				fuel = 300,
				munition = 500,
				action = 0,
				command = 12,
			},
			--british forces:
			[4] = {
				manpower = 4000,
				fuel = 300,
				munition = 500,
				action = 0,
				command = 12,
			},
		income_modifier = {
			{type = RT_Manpower, value = 2, math_type = MUT_Multiplication}, -- manpower. math_type = MUT_Multiplication OR MUT_Addition
			{type = RT_Munition, value = 3, math_type = MUT_Multiplication}, -- munition. math_type = MUT_Multiplication OR MUT_Addition
			{type = RT_Fuel, value = 3, math_type = MUT_Multiplication}, -- fuel. math_type = MUT_Multiplication OR MUT_Addition
			{type = RT_Action, value = 1, math_type = MUT_Multiplication}, -- action/xp. math_type = MUT_Multiplication OR MUT_Addition
		},
	}, 
	}
	--[[ 
        Command below will override presets. You can either make it your custom presets or 
        leave it to default 2 presets of standard and high resources. Cannot have both active
        at once. Comment out below if you want default presets only.
    ]] 

    --Take custom input, store as a temp then set preset.
	local g_ResourceSet = ResourceSets.customSet_01
	local Player_ApplyResourceSet = function(player, resourceSet)
		Player_SetResource(player, RT_Manpower, resourceSet.manpower)
		Player_SetResource(player, RT_Fuel, resourceSet.fuel)
		Player_SetResource(player, RT_Munition, resourceSet.munition)
		Player_SetResource(player, RT_Action, resourceSet.action)
		Player_SetResource(player, RT_Command, resourceSet.command)	
	end

	--Population cap override. If you wanna be funny, you can use a random number generator for this
    --May make games more interesting
	g_popCapOverride = 300
	
    --Give all players new preset
	for i = 1, World_GetPlayerCount() do
		local player = World_GetPlayerAt(i)
		local resource_set = g_ResourceSet[Player_GetRaceIndex(player)]
		Player_ApplyResourceSet(player, resource_set)
		Player_SetPopCapOverride(player, g_popCapOverride)
		for key, resource in ipairs(g_ResourceSet.income_modifier) do
			local _value = resource.value
			if resource.math_type == MUT_Addition then
				_value = _value / (60 * 8)
			end
			Modify_PlayerResourceRate(player, resource.type, _value, resource.math_type)
		end
	end
end


--Collect User data, if null, default pointer in OST 
function Player_GetRaceIndex(player)
	local racename = Player_GetRaceName(player)
	if racename == "german" then
		return 0
	elseif racename == "soviet" then
		return 1
	elseif racename == "west_german" then
		return 2
	elseif racename == "aef" then
		return 3
	elseif racename == "british" then
		return 4
	else
		return 0
	end
end


--Function Calls
Scar_AddInit(CustomStartingResources_Init)
Scar_AddInit(OnInit)


